// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ThinkEdu_Core_Service.Infrastructure.Persistence;

#nullable disable

namespace ThinkEdu_Core_Service.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    [Migration("20250424031152_DbInit")]
    partial class DbInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ThinkEdu_Core_Service.Domain.Entities.CoSo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("created_by");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("dia_chi");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("MaCoSo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ma_co_so");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("so_dien_thoai");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("TenCoSo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ten_co_so");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<long>("TrungTamId")
                        .HasColumnType("bigint")
                        .HasColumnName("trung_tam_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("MaCoSo")
                        .IsUnique();

                    b.HasIndex("TrungTamId");

                    b.ToTable("co_so", (string)null);
                });

            modelBuilder.Entity("ThinkEdu_Core_Service.Domain.Entities.Setting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("SettingKey")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("setting_key");

                    b.Property<string>("SettingValue")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("setting_value");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("setting", (string)null);
                });

            modelBuilder.Entity("ThinkEdu_Core_Service.Domain.Entities.ToChuc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("MaToChuc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ma_to_chuc");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("so_dien_thoai");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("TenToChuc")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ten_to_chuc");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("to_chuc", (string)null);
                });

            modelBuilder.Entity("ThinkEdu_Core_Service.Domain.Entities.TrungTam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CoSoMax")
                        .HasColumnType("int")
                        .HasColumnName("co_so_max");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("created_by");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("dia_chi");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hinh_anh");

                    b.Property<string>("MoTa")
                        .HasColumnType("varchar")
                        .HasColumnName("mo_ta");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("so_dien_thoai");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("TenTrungTam")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ten_trung_tam");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("trung_tam", (string)null);
                });

            modelBuilder.Entity("ThinkEdu_Core_Service.Domain.Entities.CoSo", b =>
                {
                    b.HasOne("ThinkEdu_Core_Service.Domain.Entities.TrungTam", "TrungTam")
                        .WithMany("CoSo")
                        .HasForeignKey("TrungTamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrungTam");
                });

            modelBuilder.Entity("ThinkEdu_Core_Service.Domain.Entities.Setting", b =>
                {
                    b.HasOne("ThinkEdu_Core_Service.Domain.Entities.ToChuc", "ToChuc")
                        .WithMany("Setting")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToChuc");
                });

            modelBuilder.Entity("ThinkEdu_Core_Service.Domain.Entities.TrungTam", b =>
                {
                    b.HasOne("ThinkEdu_Core_Service.Domain.Entities.ToChuc", "ToChuc")
                        .WithMany("TrungTam")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ToChuc");
                });

            modelBuilder.Entity("ThinkEdu_Core_Service.Domain.Entities.ToChuc", b =>
                {
                    b.Navigation("Setting");

                    b.Navigation("TrungTam");
                });

            modelBuilder.Entity("ThinkEdu_Core_Service.Domain.Entities.TrungTam", b =>
                {
                    b.Navigation("CoSo");
                });
#pragma warning restore 612, 618
        }
    }
}
